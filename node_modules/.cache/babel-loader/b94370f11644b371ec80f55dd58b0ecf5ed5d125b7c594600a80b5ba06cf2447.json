{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://192.168.1.227:5000/api';\nexport class LocationTracker {\n  constructor(userId) {\n    this.userId = userId;\n    this.watchId = null;\n    this.isTracking = false;\n  }\n  async startTracking() {\n    this.isTracking = true;\n    if (!navigator.geolocation) {\n      console.error('Geolocation not supported');\n      this.useFallbackLocation();\n      return;\n    }\n    try {\n      // Check permission first\n      const permission = await navigator.permissions.query({\n        name: 'geolocation'\n      });\n      console.log('Location permission:', permission.state);\n      if (permission.state === 'denied') {\n        alert('Location access is blocked. Please enable location in your browser settings.');\n        this.useFallbackLocation();\n        return;\n      }\n\n      // Get current position with better error handling\n      navigator.geolocation.getCurrentPosition(position => {\n        const liveLocation = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        console.log('üìç Got live GPS location:', liveLocation);\n        this.updateLocation(liveLocation.latitude, liveLocation.longitude);\n\n        // Start live tracking with more lenient options\n        this.watchId = navigator.geolocation.watchPosition(pos => {\n          console.log('üìç Live GPS update:', pos.coords.latitude, pos.coords.longitude);\n          this.updateLocation(pos.coords.latitude, pos.coords.longitude);\n        }, error => {\n          console.error('GPS tracking error:', error);\n          this.handleLocationError(error);\n        }, {\n          enableHighAccuracy: false,\n          // Less strict for better compatibility\n          timeout: 10000,\n          // Longer timeout\n          maximumAge: 30000 // Allow cached location up to 30 seconds\n        });\n      }, error => {\n        console.error('Initial GPS error:', error);\n        this.handleLocationError(error);\n      }, {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 60000\n      });\n    } catch (error) {\n      console.error('Permission check failed:', error);\n      this.useFallbackLocation();\n    }\n  }\n  handleLocationError(error) {\n    let errorMessage = '';\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        errorMessage = 'Location access denied. Please enable location permissions.';\n        break;\n      case error.POSITION_UNAVAILABLE:\n        errorMessage = 'Location information unavailable.';\n        break;\n      case error.TIMEOUT:\n        errorMessage = 'Location request timed out.';\n        break;\n      default:\n        errorMessage = 'Unknown location error.';\n        break;\n    }\n    console.error('Location error:', errorMessage);\n    alert(errorMessage + ' Using approximate location instead.');\n    this.useFallbackLocation();\n  }\n  useFallbackLocation() {\n    var _prompt;\n    const city = ((_prompt = prompt('Enter your city (casablanca/marrakech/rabat):')) === null || _prompt === void 0 ? void 0 : _prompt.toLowerCase()) || 'casablanca';\n    let mockLat, mockLng;\n    if (city.includes('marrakech')) {\n      mockLat = 31.6295 + (Math.random() - 0.5) * 0.01;\n      mockLng = -7.9811 + (Math.random() - 0.5) * 0.01;\n      console.log('Using mock Marrakech location');\n    } else if (city.includes('rabat')) {\n      mockLat = 34.0209 + (Math.random() - 0.5) * 0.01;\n      mockLng = -6.8416 + (Math.random() - 0.5) * 0.01;\n      console.log('Using mock Rabat location');\n    } else {\n      mockLat = 33.5731 + (Math.random() - 0.5) * 0.01;\n      mockLng = -7.5898 + (Math.random() - 0.5) * 0.01;\n      console.log('Using mock Casablanca location');\n    }\n    this.updateLocation(mockLat, mockLng);\n\n    // Simulate movement\n    this.watchId = setInterval(() => {\n      const newLat = mockLat + (Math.random() - 0.5) * 0.001;\n      const newLng = mockLng + (Math.random() - 0.5) * 0.001;\n      this.updateLocation(newLat, newLng);\n    }, 5000);\n  }\n  stopTracking() {\n    if (this.watchId) {\n      if (typeof this.watchId === 'number' && navigator.geolocation) {\n        navigator.geolocation.clearWatch(this.watchId);\n      } else {\n        clearInterval(this.watchId);\n      }\n      this.watchId = null;\n    }\n    this.isTracking = false;\n    console.log('üö´ Live location tracking stopped');\n  }\n  async updateLocation(latitude, longitude) {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.patch(`${API_URL}/users/${this.userId}/location`, {\n        latitude,\n        longitude,\n        address: `${latitude.toFixed(4)}, ${longitude.toFixed(4)}`\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Cache location and broadcast to customers via socket\n      if (window.driverSocket) {\n        const locationData = {\n          driverId: this.userId,\n          location: {\n            latitude,\n            longitude\n          },\n          timestamp: Date.now()\n        };\n        window.driverSocket.emit('driver-location', locationData);\n        window.driverSocket.emit('cache-driver-location', locationData);\n      }\n    } catch (error) {\n      console.error('Failed to update location:', error);\n    }\n  }\n  async getCurrentLocation() {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        console.log('Geolocation not supported, using stored location');\n        this.getStoredLocation().then(resolve).catch(reject);\n        return;\n      }\n      navigator.geolocation.getCurrentPosition(position => {\n        const location = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        console.log('üìç Got current GPS location:', location);\n        resolve(location);\n      }, async error => {\n        console.error('GPS getCurrentLocation error:', error);\n        try {\n          const storedLocation = await this.getStoredLocation();\n          resolve(storedLocation);\n        } catch (err) {\n          reject(err);\n        }\n      }, {\n        enableHighAccuracy: false,\n        timeout: 8000,\n        maximumAge: 60000\n      });\n    });\n  }\n  async getStoredLocation() {\n    try {\n      var _userData$location, _userData$location2;\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_URL}/users/${this.userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const userData = await response.json();\n      if ((_userData$location = userData.location) !== null && _userData$location !== void 0 && _userData$location.latitude && (_userData$location2 = userData.location) !== null && _userData$location2 !== void 0 && _userData$location2.longitude) {\n        console.log('Using driver stored location:', userData.location);\n        return {\n          latitude: userData.location.latitude,\n          longitude: userData.location.longitude\n        };\n      }\n    } catch (error) {\n      console.error('Error getting stored location:', error);\n    }\n\n    // Fallback to Casablanca\n    console.log('Using default Casablanca location');\n    return {\n      latitude: 33.5731,\n      longitude: -7.5898\n    };\n  }\n}\nexport default LocationTracker;","map":{"version":3,"names":["axios","API_URL","LocationTracker","constructor","userId","watchId","isTracking","startTracking","navigator","geolocation","console","error","useFallbackLocation","permission","permissions","query","name","log","state","alert","getCurrentPosition","position","liveLocation","latitude","coords","longitude","updateLocation","watchPosition","pos","handleLocationError","enableHighAccuracy","timeout","maximumAge","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","_prompt","city","prompt","toLowerCase","mockLat","mockLng","includes","Math","random","setInterval","newLat","newLng","stopTracking","clearWatch","clearInterval","token","localStorage","getItem","patch","address","toFixed","headers","Authorization","window","driverSocket","locationData","driverId","location","timestamp","Date","now","emit","getCurrentLocation","Promise","resolve","reject","getStoredLocation","then","catch","storedLocation","err","_userData$location","_userData$location2","response","fetch","userData","json"],"sources":["C:/Users/LENOVO LEGION 7/delivery-connect/frontend/src/utils/locationTracker.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://192.168.1.227:5000/api';\n\nexport class LocationTracker {\n  constructor(userId) {\n    this.userId = userId;\n    this.watchId = null;\n    this.isTracking = false;\n  }\n\n  async startTracking() {\n    this.isTracking = true;\n    \n    if (!navigator.geolocation) {\n      console.error('Geolocation not supported');\n      this.useFallbackLocation();\n      return;\n    }\n\n    try {\n      // Check permission first\n      const permission = await navigator.permissions.query({name: 'geolocation'});\n      console.log('Location permission:', permission.state);\n      \n      if (permission.state === 'denied') {\n        alert('Location access is blocked. Please enable location in your browser settings.');\n        this.useFallbackLocation();\n        return;\n      }\n\n      // Get current position with better error handling\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const liveLocation = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('üìç Got live GPS location:', liveLocation);\n          this.updateLocation(liveLocation.latitude, liveLocation.longitude);\n          \n          // Start live tracking with more lenient options\n          this.watchId = navigator.geolocation.watchPosition(\n            (pos) => {\n              console.log('üìç Live GPS update:', pos.coords.latitude, pos.coords.longitude);\n              this.updateLocation(pos.coords.latitude, pos.coords.longitude);\n            },\n            (error) => {\n              console.error('GPS tracking error:', error);\n              this.handleLocationError(error);\n            },\n            { \n              enableHighAccuracy: false, // Less strict for better compatibility\n              timeout: 10000, // Longer timeout\n              maximumAge: 30000 // Allow cached location up to 30 seconds\n            }\n          );\n        },\n        (error) => {\n          console.error('Initial GPS error:', error);\n          this.handleLocationError(error);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 10000,\n          maximumAge: 60000\n        }\n      );\n    } catch (error) {\n      console.error('Permission check failed:', error);\n      this.useFallbackLocation();\n    }\n  }\n\n  handleLocationError(error) {\n    let errorMessage = '';\n    switch(error.code) {\n      case error.PERMISSION_DENIED:\n        errorMessage = 'Location access denied. Please enable location permissions.';\n        break;\n      case error.POSITION_UNAVAILABLE:\n        errorMessage = 'Location information unavailable.';\n        break;\n      case error.TIMEOUT:\n        errorMessage = 'Location request timed out.';\n        break;\n      default:\n        errorMessage = 'Unknown location error.';\n        break;\n    }\n    \n    console.error('Location error:', errorMessage);\n    alert(errorMessage + ' Using approximate location instead.');\n    this.useFallbackLocation();\n  }\n\n  useFallbackLocation() {\n    const city = prompt('Enter your city (casablanca/marrakech/rabat):')?.toLowerCase() || 'casablanca';\n    \n    let mockLat, mockLng;\n    if (city.includes('marrakech')) {\n      mockLat = 31.6295 + (Math.random() - 0.5) * 0.01;\n      mockLng = -7.9811 + (Math.random() - 0.5) * 0.01;\n      console.log('Using mock Marrakech location');\n    } else if (city.includes('rabat')) {\n      mockLat = 34.0209 + (Math.random() - 0.5) * 0.01;\n      mockLng = -6.8416 + (Math.random() - 0.5) * 0.01;\n      console.log('Using mock Rabat location');\n    } else {\n      mockLat = 33.5731 + (Math.random() - 0.5) * 0.01;\n      mockLng = -7.5898 + (Math.random() - 0.5) * 0.01;\n      console.log('Using mock Casablanca location');\n    }\n    \n    this.updateLocation(mockLat, mockLng);\n    \n    // Simulate movement\n    this.watchId = setInterval(() => {\n      const newLat = mockLat + (Math.random() - 0.5) * 0.001;\n      const newLng = mockLng + (Math.random() - 0.5) * 0.001;\n      this.updateLocation(newLat, newLng);\n    }, 5000);\n  }\n\n  stopTracking() {\n    if (this.watchId) {\n      if (typeof this.watchId === 'number' && navigator.geolocation) {\n        navigator.geolocation.clearWatch(this.watchId);\n      } else {\n        clearInterval(this.watchId);\n      }\n      this.watchId = null;\n    }\n    this.isTracking = false;\n    console.log('üö´ Live location tracking stopped');\n  }\n\n  async updateLocation(latitude, longitude) {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.patch(`${API_URL}/users/${this.userId}/location`, {\n        latitude,\n        longitude,\n        address: `${latitude.toFixed(4)}, ${longitude.toFixed(4)}`\n      }, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      // Cache location and broadcast to customers via socket\n      if (window.driverSocket) {\n        const locationData = {\n          driverId: this.userId,\n          location: { latitude, longitude },\n          timestamp: Date.now()\n        };\n        \n        window.driverSocket.emit('driver-location', locationData);\n        window.driverSocket.emit('cache-driver-location', locationData);\n      }\n    } catch (error) {\n      console.error('Failed to update location:', error);\n    }\n  }\n\n  async getCurrentLocation() {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        console.log('Geolocation not supported, using stored location');\n        this.getStoredLocation().then(resolve).catch(reject);\n        return;\n      }\n\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const location = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          console.log('üìç Got current GPS location:', location);\n          resolve(location);\n        },\n        async (error) => {\n          console.error('GPS getCurrentLocation error:', error);\n          try {\n            const storedLocation = await this.getStoredLocation();\n            resolve(storedLocation);\n          } catch (err) {\n            reject(err);\n          }\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 8000,\n          maximumAge: 60000\n        }\n      );\n    });\n  }\n\n  async getStoredLocation() {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_URL}/users/${this.userId}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      const userData = await response.json();\n      \n      if (userData.location?.latitude && userData.location?.longitude) {\n        console.log('Using driver stored location:', userData.location);\n        return {\n          latitude: userData.location.latitude,\n          longitude: userData.location.longitude\n        };\n      }\n    } catch (error) {\n      console.error('Error getting stored location:', error);\n    }\n    \n    // Fallback to Casablanca\n    console.log('Using default Casablanca location');\n    return {\n      latitude: 33.5731,\n      longitude: -7.5898\n    };\n  }\n}\n\nexport default LocationTracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}